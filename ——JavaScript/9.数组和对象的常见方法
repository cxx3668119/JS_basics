1.Array.map()
此方法是给数组中的每项数据都添加一个方法，结果作为一个新的数组返回，并不会改变原来的数组。
2.Array.forEach()
此方法是给数组的每一项数据循环添加一个方法，和map不同的是，forEach改变原数组，没有返回值。
3.Array.filter()
此方法类似于筛选向方法中传入一个判断条件，将满足条件的值变成一个新的数组返回。
4.Array.every()
此方法是将所有元素进行判断返回一个布尔值，如果所有元素都满足判断条件的话，则返回true，如果不满足就返回 false。遍历数组每一项，若全部为true，才返回true ,否则返回false
5.Array.some()
此方法和every类似，唯一区别就是some遍历数组中的每一项，若其中一项为true,则返回值是true，every遍历数组每一项，若全部为true，才返回true ,否则返回false。
6.Array.reduce()
reduce 为数组中的每一个元素依次执行回调函数，不包括数组中被删除或从未被赋值的元素，接受四个参数：初始值（或者上一次回调函数的返回值），当前元素值，当前索引，调用 reduce 的数组。可以用来写求和求积。
7.Array.push()
此方法用来向数组末尾添加一个或多个元素，返回新增后数组的长度。
8.Array.pop()
此方法删除数组中的最后一位元素，并返回数组，改变数组的长度。
9.Array.shift()
此方法删除数组中的第一个元素，并返回数组，此方法会改变数组长度。
10.Array.unshift()
此方法向数组前添加一个或多个元素，并返回数组，此方法会改变数组长度。
11.Array.isArray()
此方法是用来判断一个对象是不是数组，是的话返回true，不是返回false。
12.Array.concat()
此方法是一个可以将多个数组合并成一个数组的方法。
13.Array.toString()
此方法是用来将数组转变为字符串格式
14.Array.join()
此方法也是将数组转换为字符串，但和toString不同的是join可以设置元素之间的间隔。
15.Array.splice(开始位置， 删除的个数，元素)
万能的方法可以实现数组的增、删、改。
16.Array.slice()
此方法返回从原数组中指定开始下表到结束下表之间的项组成的新数组（原数组不变）截取数组。
17.Array.includes()
此方法用来判断数组中是否有传入的元素，有的话返回true，没有的话返回false。
18.Array.indexOf()
从数组的开头向后查找，接受两个参数，要查找的项和查找起点的位置索引。
19.Array.sort()
按指定的参数对数组进行排序，返回的值是经过排序后的数组（无参，函数）
20.Array.fill()
此方法用来替换数组中的元素，会改变原数组。接受三个参数，第一个参数为替换的值，如果只传入一个值会吧数组中的值全部替换。


1.Object.assign()
此方法用于克隆对象，传入两个参数，第一个参数为原对象，第二个参数为需要克隆的对象。会合并为一个新的对象，改变第一个参数的对象。
2.Object.is()
此方法是用来比较的接受两个参数，第一个参数是需要比较的第一个值，第二个参数是需要比较的第二个值。
返回值：布尔值，如果两个值相同返回true，不相同返回false。
注意，该函数与==运算符不同，不会强制转换任何类型，
应该更加类似于**===，但值得注意的是它会将+0和-0视作不同值**
3.Object.keys()
此方法是用来获取对象的key值的。返回一个包含key值的数组。
4.Object.defineProperty()
defineProperty为设置对象的属性的属性特征 value设置属性名，enumerable设置该属性是否可以被枚举。未设置的枚举的属性不能被for in遍历和keys获取。
该方法接受三个参数，第一个参数为要加入属性的对象，第二个参数为属性的key值，第三个参数为一个对象。
5.Object.defineProperties()
可添加多个属性,与Object.defineProperty()对应。
6.Object.isPrototypeOf()
此方法是用来检查一个对象是否存在另一个对象的原型链中。